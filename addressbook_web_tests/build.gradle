plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = '2.29.0'
def aspectJVersion = '1.9.22'

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.24.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
    implementation 'org.jcommander:jcommander:2.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.1'
    implementation 'com.mysql:mysql-connector-j:9.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.3.0.CR1'

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"

}

test {
    useJUnitPlatform()

    if (project.hasProperty("browser")){
        systemProperties("browser", project.property("browser"))
    }
    if (project.hasProperty("target")){
        systemProperties("target", project.property("target"))
    }
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}

tasks.test {
    // Включение генерации отчетов в формате JUnit XML
    reports {
        junitXml.enabled = true    // Включение JUnit отчетов
        //html.enabled = true       // Включение HTML отчетов (опционально)
    }

    // Указание директории для отчетов (по умолчанию: build/reports/tests)
    //reports.junitXml.destination = file("$buildDir/test-results/junit")
}